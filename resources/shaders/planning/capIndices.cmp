

//functions


void setDefectCapTriangleIndex( in uint graftIndex, in uint i, in uint triIndex )
{
    uint offset = (graftIndex * PL_MAX_CAP_TRIANGLES) + 1; // + 1 triangle count is [0]
    defectCapIndices[ offset+i ] = triIndex;
}


void setDefectCapIndexCount( in uint graftIndex, in uint count )
{
    uint offset = graftIndex * PL_MAX_CAP_TRIANGLES;
    defectCapIndices[ offset ] = count;
}

void setDonorCapTriangleIndex( in uint i, in uint triIndex )
{
    uint offset = (gl_GlobalInvocationID.x * PL_MAX_CAP_TRIANGLES) + 1; // + 1 triangle count is [0]
    donorCapIndices[ offset+i ] = triIndex;
}


void setDonorCapIndexCount( in uint count )
{
    uint offset = (gl_GlobalInvocationID.x * PL_MAX_CAP_TRIANGLES);
    donorCapIndices[ offset ] = count;
}


uint getDefectCapCount( in uint graftIndex )
{
    uint offset = graftIndex * PL_MAX_CAP_TRIANGLES;
    return defectCapIndices[ offset ];
}


uint getDonorCapCount()
{
    uint offset = gl_GlobalInvocationID.x * PL_MAX_CAP_TRIANGLES;
    return donorCapIndices[ offset ];
}


triangle getDefectCapTriangles( in uint graftIndex, in vec3 graftPosition, in uint index )
{
    uint offset   = (graftIndex * PL_MAX_CAP_TRIANGLES) + 1; // + 1 triangle count is [0]
    uint triIndex = uDefectSiteGridPointCount*2 + defectCapIndices[ offset+index ]*4;    // get triangle index

    triangle t;
    t.p0 = defectSiteData[triIndex+0].xyz - graftPosition;  // subtract graft position to set cap centre to origin
    t.p1 = defectSiteData[triIndex+1].xyz - graftPosition;
    t.p2 = defectSiteData[triIndex+2].xyz - graftPosition;
    t.n  = defectSiteData[triIndex+3].xyz;
    return t;
}


triangle getDonorCapTriangles( in uint site, in vec3 gridPosition, in uint index )
{
    uint offset   = (gl_GlobalInvocationID.x * PL_MAX_CAP_TRIANGLES) + 1; // + 1 triangle count is [0]
    uint triIndex =  uDonorSiteDataOffsets[ site ] + uDonorSiteGridPointCounts[ site ]*2 + donorCapIndices[ offset+index ]*4; // get triangle index

    triangle t;
    t.p0 = donorSiteData[triIndex+0].xyz - gridPosition;  // subtract grid position to set cap centre to origin
    t.p1 = donorSiteData[triIndex+1].xyz - gridPosition;
    t.p2 = donorSiteData[triIndex+2].xyz - gridPosition;
    t.n  = donorSiteData[triIndex+3].xyz;
    return t;
}
